{"ast":null,"code":"var _jsxFileName = \"/home/gr00866046/Videos/React/typescript-tutorial/myapp1/src/Components/MovieCard.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieCard({\n  movie,\n  movieId,\n  isWatchListed,\n  toggleWatchlist\n}) {\n  console.log(\"key : \", movieId);\n  const errorHandler = e => {\n    e.target.src = \"./images/default.jpg\";\n  };\n  function ratingClass(rating) {\n    if (rating > 8) return \"green\";\n    if (rating >= 5 && rating <= 8) return \"yellow\";\n    if (rating < 5) return \"red\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `images/${movie.image}`,\n        alt: movie.title,\n        onError: errorHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"movie-card-title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie-card-genre\",\n            children: movie.genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie-card-rating\",\n            style: {\n              color: ratingClass(movie.rating)\n            },\n            children: movie.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: isWatchListed ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isWatchListed,\n              onChange: () => toggleWatchlist(movieId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider-label\",\n              children: isWatchListed ? \"In Watchlist\" : \"Add to Watchlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["MovieCard","movie","movieId","isWatchListed","toggleWatchlist","console","log","errorHandler","e","target","src","ratingClass","rating","_jsxDEV","children","className","image","alt","title","onError","fileName","_jsxFileName","lineNumber","columnNumber","genre","style","color","type","checked","onChange","_Fragment","id","_c","$RefreshReg$"],"sources":["/home/gr00866046/Videos/React/typescript-tutorial/myapp1/src/Components/MovieCard.jsx"],"sourcesContent":["\nexport default function MovieCard({ movie, movieId, isWatchListed, toggleWatchlist }) {\n  console.log(\"key : \", movieId);\n\n  const errorHandler = (e) => {\n    e.target.src = \"./images/default.jpg\";\n  };\n\n  function ratingClass(rating) {\n    if (rating > 8) return \"green\";\n    if (rating >= 5 && rating <= 8) return \"yellow\";\n    if (rating < 5) return \"red\";\n  }\n\n  return (\n    <div>\n      <div key={movie.id} className=\"movie-card\">\n        <img\n          src={`images/${movie.image}`}\n          alt={movie.title}\n          onError={errorHandler}\n        />\n        <div className=\"movie-card-info\">\n          <h3 className=\"movie-card-title\">{movie.title}</h3>\n          <div>\n              <span className=\"movie-card-genre\">{movie.genre}</span>\n              <span className=\"movie-card-rating\"\n                 style={{ color: ratingClass(movie.rating) }}>\n                {movie.rating}\n              </span>\n          </div>\n          <label className=\"switch\">\n            <span>\n              {isWatchListed ? \n              <input type=\"checkbox\" checked={isWatchListed} onChange={() => toggleWatchlist(movieId)}>\n              </input> : \n              <></>}\n            </span>\n            <span className=\"slider\">\n                <span className=\"slider-label\" >\n                  {isWatchListed ? \"In Watchlist\" : \"Add to Watchlist\"}\n                </span>\n            </span>\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}