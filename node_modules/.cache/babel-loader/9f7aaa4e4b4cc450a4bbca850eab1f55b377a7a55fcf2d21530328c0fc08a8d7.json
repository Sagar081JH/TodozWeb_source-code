{"ast":null,"code":"var _jsxFileName = \"/home/gr00866046/Videos/Todoos-with-react/src/Components/TodosPureReact.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodosPureReact({\n  isToggleClicked\n}) {\n  _s();\n  const [todoHeadline, setTodoHeadline] = useState(\"\");\n  const [todoDescription, setTodoDescription] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [id, setId] = useState(0);\n  const [actionMessage, setActionMessage] = useState(\"\");\n  const [msgColor, setMsgColor] = useState(\"\");\n  const [headlineError, setHeadlineError] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n  const [editedTodoId, setEditedTodoId] = useState(0);\n  const [isEditHeadlineClicked, setIsEditHeadlineClicked] = useState(false);\n  const [editedHeadline, setEditedHeadline] = useState(todoHeadline);\n  const [isEditDescriptionClicked, setIsEditDescriptionClicked] = useState(false);\n  const [editedDescription, setEditedDescription] = useState(todoDescription);\n  const [myName, setMyname] = useState(\"Developer : Sagar Ghumare\");\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setMyname(\"\");\n  //   }, 2000);\n  // }, []);\n  const [headlineBorder, setHeadlineBorder] = useState(\"\");\n  const [descInputBorderColor, setDescInputBorderColor] = useState(\"\");\n  function addTask(headline, description) {\n    if (headline == \"\" || description == \"\") {\n      if (description == \"\") {\n        setDescriptionError(\"Empty Description !\");\n        setDescInputBorderColor(\"border-danger\");\n      } else {\n        setDescriptionError(\"\");\n        setDescInputBorderColor(\"\");\n      }\n      if (headline == \"\") {\n        setHeadlineError(\"Empty Headline !\");\n        setHeadlineBorder(\"border-danger\");\n      } else {\n        setHeadlineError(\"\");\n        setHeadlineBorder(\"\");\n      }\n    } else {\n      setDescInputBorderColor(\"\");\n      setHeadlineBorder(\"\");\n      setActionMessage(\"Task Added !!!\");\n      setId(id + 1);\n      const newTask = {\n        id,\n        headline,\n        description\n      };\n      setTodos([newTask, ...todos]);\n      setHeadlineError(\"\");\n      setDescriptionError(\"\");\n      setMsgColor(\"green\");\n      setTimeout(() => {\n        setActionMessage(\"\");\n      }, 2000);\n    }\n    // setTimeout(() => {\n    //   setHeadlineError(\"\");\n    //   setDescriptionError(\"\");\n    // }, 2000);\n  }\n  function deleteTask(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n    setActionMessage(\"Task Deleted !!!\");\n    setMsgColor(\"red\");\n    setTimeout(() => {\n      setActionMessage(\"\");\n    }, 3000);\n  }\n  function editTaskHeadline(todo) {\n    setEditedTodoId(todo.id);\n    setEditedHeadline(todo.headline);\n    setIsEditHeadlineClicked(true);\n  }\n  function editTaskDescription(todo) {\n    setEditedTodoId(todo.id);\n    setEditedDescription(todo.description);\n    setIsEditDescriptionClicked(true);\n  }\n  function saveHeadline(newHeadline, editedTodoId) {\n    let index = 0;\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id == editedTodoId) {\n        break;\n      }\n      index = index + 1;\n    }\n    console.log(\"index :\" + index);\n    todos[index].headline = newHeadline;\n    setTodos(todos);\n    setIsEditHeadlineClicked(false);\n    setMsgColor(\"blue\");\n    setActionMessage(\"Task Headline Updated !!!\");\n    setTimeout(() => {\n      setActionMessage(\"\");\n    }, 3000);\n  }\n  function saveDescription(description, todoId) {\n    let index = 0;\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id == todoId) {\n        break;\n      }\n      index = index + 1;\n    }\n    console.log(\"index :\" + index);\n    todos[index].description = description;\n    setTodos(todos);\n    setIsEditDescriptionClicked(false);\n    setMsgColor(\"blue\");\n    setActionMessage(\"Task Description Updated !!!\");\n    setTimeout(() => {\n      setActionMessage(\"\");\n    }, 3000);\n  }\n  let toggleButtonColor = \"btn-dark\";\n  if (isToggleClicked) {\n    toggleButtonColor = \"btn-light text-dark\";\n    document.body.style.backgroundColor = \"black\";\n  } else {\n    toggleButtonColor = \"btn-dark\";\n    document.body.style.backgroundColor = \"white\";\n  }\n  function clearField() {\n    setTodoHeadline(\"\");\n    setTodoDescription(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky-top p-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 row  text-center ${isToggleClicked ? \"bg-dark border-secondary text-light\" : \"bg-light text-dark\"} fs-1 border rounded-3`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `col-6 text-start fw-normal ${isToggleClicked ? \"text-warning\" : \"text-success\"}`,\n            children: \"Todoz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 text-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: ` btn ${toggleButtonColor}`,\n              onClick: () => setIsToggleClicked(!isToggleClicked),\n              children: isToggleClicked ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u263D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 36\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-end mt-2 mb-2 pt-2 pb-2 ${isToggleClicked ? \"text-warning\" : \"text-primary\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"border rounded p-2\",\n          children: myName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border rounded p-4 ${isToggleClicked ? \"border-secondary\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3 row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: `${isToggleClicked ? \"headlineInputDark\" : \"headlineInputLight\"}`,\n              className: `col-6 fw-bold form-label text-start ${isToggleClicked ? \"text-info\" : \"text-primary\"}`,\n              children: \"Task headline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `col-6 text-end text-danger`,\n              children: headlineError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `${isToggleClicked ? \"headlineInputDark\" : \"headlineInputLight\"}`,\n              placeholder: \"write your task headline...\",\n              class: \"form-control\",\n              className: `form-control input ${headlineBorder} ${isToggleClicked ? \"bg-dark text-light border-secondary \" : \"bg-light text-dark\"} `,\n              value: todoHeadline,\n              onChange: e => setTodoHeadline(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3 row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: `${isToggleClicked ? \"descriptionInputDark\" : \"descriptionInputLight\"}`,\n              className: `col-6 fw-bold form-label ${isToggleClicked ? \"text-info\" : \"text-primary\"}`,\n              children: \"Task Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `col-6 text-end text-danger`,\n              children: descriptionError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"write your task decsciption...\",\n              className: `form-control ${descInputBorderColor} ${isToggleClicked ? \" bg-dark text-light border-secondary\" : \"bg-light text-dark\"}`,\n              id: `${isToggleClicked ? \"descriptionInputDark\" : \"descriptionInputLight\"}`,\n              value: todoDescription,\n              onChange: e => setTodoDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `w-75 btn btn-outline-info ${isToggleClicked ? \"text-light\" : \"text-dark\"}`,\n                onClick: () => clearField(),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"col-8\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => addTask(todoHeadline, todoDescription),\n                className: `btn w-100 text-light btn-success`,\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row mt-2 pt-2 justify-content-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `col-6 fs-3 ${isToggleClicked ? \"text-light\" : \"text-dark\"}`,\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 text-start p-2\",\n            style: {\n              color: msgColor\n            },\n            children: actionMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: `${isToggleClicked ? \"text-light\" : \"text-dark\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: todos.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n              className: `table ${isToggleClicked ? \"table-dark\" : \"table-light\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: `${isToggleClicked ? \"text-info\" : \"text-primary\"}`,\n                    children: \"Headline\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: \"text-start text-warning\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: `${isToggleClicked ? \"text-info\" : \"text-primary\"}`,\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: \"text-start text-warning\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: `text-start text-danger`,\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditHeadlineClicked && editedTodoId == todo.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        id: `${isToggleClicked ? \"headlineEditInputDark\" : \"headlineEditInputLight\"}`,\n                        className: `form-control ${isToggleClicked ? \"bg-dark text-light\" : \"bg-light text-dark\"}`,\n                        placeholder: \"edit headline...\",\n                        value: editedHeadline,\n                        onChange: e => setEditedHeadline(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: todo.headline\n                    }, void 0, false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-start\",\n                    children: [isEditHeadlineClicked && editedTodoId == todo.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn text-dark btn-outline-success\",\n                        onClick: () => saveHeadline(editedHeadline, editedTodoId),\n                        children: \"\\u2611\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn text-danger btn-outline-success\",\n                        onClick: () => setIsEditHeadlineClicked(false),\n                        children: \"\\u2612\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), !isEditHeadlineClicked ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-start\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"edit-headline\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          onClick: () => editTaskHeadline(todo),\n                          className: `btn ${isToggleClicked ? \"text-light btn-outline-success\" : \"text-dark btn-outline-info\"}`,\n                          children: \"\\u270E\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 405,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditDescriptionClicked && editedTodoId == todo.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        id: `${isToggleClicked ? \"descEditInputDark\" : \"descEditInputLight\"}`,\n                        className: `form-control ${isToggleClicked ? \"bg-dark text-light\" : \"bg-light text-dark\"}`,\n                        placeholder: \"edit description...\",\n                        value: editedDescription,\n                        onChange: e => setEditedDescription(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: todo.description\n                    }, void 0, false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-start\",\n                    children: [isEditDescriptionClicked && editedTodoId == todo.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"text-dark btn btn-outline-success\",\n                        onClick: () => saveDescription(editedDescription, todo.id),\n                        children: \"\\u2611\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn text-danger btn-outline-success\",\n                        onClick: () => setIsEditDescriptionClicked(false),\n                        children: \"\\u2612\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), !isEditDescriptionClicked ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"edit-desc\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          onClick: () => editTaskDescription(todo),\n                          className: `btn ${isToggleClicked ? \"text-light btn-outline-success \" : \"text-dark btn-outline-info\"}`,\n                          children: \"\\u270E\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 478,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 477,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-start p-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-danger\",\n                      \"data-toggle\": \"modal\",\n                      \"data-target\": `#${todo.id}`,\n                      children: \"\\u2717\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"modal fade\",\n                      id: todo.id,\n                      tabindex: \"-1\",\n                      role: \"dialog\",\n                      \"aria-labelledby\": \"exampleModalCenterTitle\",\n                      \"aria-hidden\": \"true\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"modal-dialog modal-dialog-centered\",\n                        role: \"document\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"modal-content\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `modal-body ${isToggleClicked ? \"bg-dark text-light\" : \"bg-light text-dark\"}`,\n                            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: \"Are your sure ?\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 529,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 522,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `modal-footer ${isToggleClicked ? \"bg-dark\" : \"bg-light\"}`,\n                            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                              type: \"button\",\n                              className: \"btn btn-secondary\",\n                              \"data-dismiss\": \"modal\",\n                              children: \"No, Cancel\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 536,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              type: \"button\",\n                              className: \"btn btn-danger\",\n                              \"data-dismiss\": \"modal\",\n                              onClick: () => deleteTask(todo.id),\n                              children: \"Yes, Delete\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 543,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 531,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 521,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TodosPureReact, \"k30NR+LSvWZzpmyjiD2nZogwhTo=\");\n_c = TodosPureReact;\nvar _c;\n$RefreshReg$(_c, \"TodosPureReact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodosPureReact","isToggleClicked","_s","todoHeadline","setTodoHeadline","todoDescription","setTodoDescription","todos","setTodos","id","setId","actionMessage","setActionMessage","msgColor","setMsgColor","headlineError","setHeadlineError","descriptionError","setDescriptionError","editedTodoId","setEditedTodoId","isEditHeadlineClicked","setIsEditHeadlineClicked","editedHeadline","setEditedHeadline","isEditDescriptionClicked","setIsEditDescriptionClicked","editedDescription","setEditedDescription","myName","setMyname","headlineBorder","setHeadlineBorder","descInputBorderColor","setDescInputBorderColor","addTask","headline","description","newTask","setTimeout","deleteTask","filter","todo","editTaskHeadline","editTaskDescription","saveHeadline","newHeadline","index","i","length","console","log","saveDescription","todoId","toggleButtonColor","document","body","style","backgroundColor","clearField","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setIsToggleClicked","class","for","type","placeholder","value","onChange","e","target","color","scope","map","tabindex","role","_c","$RefreshReg$"],"sources":["/home/gr00866046/Videos/Todoos-with-react/src/Components/TodosPureReact.jsx"],"sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport \"../App.css\";\n\nexport default function TodosPureReact({ isToggleClicked }) {\n  const [todoHeadline, setTodoHeadline] = useState(\"\");\n  const [todoDescription, setTodoDescription] = useState(\"\");\n\n  const [todos, setTodos] = useState([]);\n\n  const [id, setId] = useState(0);\n\n  const [actionMessage, setActionMessage] = useState(\"\");\n  const [msgColor, setMsgColor] = useState(\"\");\n  const [headlineError, setHeadlineError] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n\n  const [editedTodoId, setEditedTodoId] = useState(0);\n\n  const [isEditHeadlineClicked, setIsEditHeadlineClicked] = useState(false);\n  const [editedHeadline, setEditedHeadline] = useState(todoHeadline);\n\n  const [isEditDescriptionClicked, setIsEditDescriptionClicked] =\n    useState(false);\n  const [editedDescription, setEditedDescription] = useState(todoDescription);\n\n  const [myName, setMyname] = useState(\"Developer : Sagar Ghumare\");\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setMyname(\"\");\n  //   }, 2000);\n  // }, []);\n  const [headlineBorder, setHeadlineBorder] = useState(\"\");\n  const [descInputBorderColor, setDescInputBorderColor] = useState(\"\");\n  function addTask(headline, description) {\n    if (headline == \"\" || description == \"\") {\n      if (description == \"\") {\n        setDescriptionError(\"Empty Description !\");\n        setDescInputBorderColor(\"border-danger\");\n      } else {\n        setDescriptionError(\"\");\n        setDescInputBorderColor(\"\");\n      }\n      if (headline == \"\") {\n        setHeadlineError(\"Empty Headline !\");\n        setHeadlineBorder(\"border-danger\");\n      } else {\n        setHeadlineError(\"\");\n        setHeadlineBorder(\"\");\n      }\n    } else {\n      setDescInputBorderColor(\"\");\n      setHeadlineBorder(\"\");\n      setActionMessage(\"Task Added !!!\");\n      setId(id + 1);\n      const newTask = {\n        id,\n        headline,\n        description,\n      };\n      setTodos([newTask, ...todos]);\n      setHeadlineError(\"\");\n      setDescriptionError(\"\");\n      setMsgColor(\"green\");\n      setTimeout(() => {\n        setActionMessage(\"\");\n      }, 2000);\n    }\n    // setTimeout(() => {\n    //   setHeadlineError(\"\");\n    //   setDescriptionError(\"\");\n    // }, 2000);\n  }\n\n  function deleteTask(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n    setActionMessage(\"Task Deleted !!!\");\n    setMsgColor(\"red\");\n    setTimeout(() => {\n      setActionMessage(\"\");\n    }, 3000);\n  }\n\n  function editTaskHeadline(todo) {\n    setEditedTodoId(todo.id);\n    setEditedHeadline(todo.headline);\n    setIsEditHeadlineClicked(true);\n  }\n\n  function editTaskDescription(todo) {\n    setEditedTodoId(todo.id);\n    setEditedDescription(todo.description);\n    setIsEditDescriptionClicked(true);\n  }\n\n  function saveHeadline(newHeadline, editedTodoId) {\n    let index = 0;\n\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id == editedTodoId) {\n        break;\n      }\n      index = index + 1;\n    }\n\n    console.log(\"index :\" + index);\n\n    todos[index].headline = newHeadline;\n    setTodos(todos);\n\n    setIsEditHeadlineClicked(false);\n\n    setMsgColor(\"blue\");\n    setActionMessage(\"Task Headline Updated !!!\");\n    setTimeout(() => {\n      setActionMessage(\"\");\n    }, 3000);\n  }\n\n  function saveDescription(description, todoId) {\n    let index = 0;\n\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id == todoId) {\n        break;\n      }\n      index = index + 1;\n    }\n\n    console.log(\"index :\" + index);\n\n    todos[index].description = description;\n    setTodos(todos);\n    setIsEditDescriptionClicked(false);\n\n    setMsgColor(\"blue\");\n    setActionMessage(\"Task Description Updated !!!\");\n    setTimeout(() => {\n      setActionMessage(\"\");\n    }, 3000);\n  }\n\n  let toggleButtonColor = \"btn-dark\";\n  if (isToggleClicked) {\n    toggleButtonColor = \"btn-light text-dark\";\n    document.body.style.backgroundColor = \"black\";\n  } else {\n    toggleButtonColor = \"btn-dark\";\n    document.body.style.backgroundColor = \"white\";\n  }\n\n  function clearField() {\n    setTodoHeadline(\"\");\n    setTodoDescription(\"\");\n  }\n  return (\n    <>\n      <div className=\"container p-2\">\n        <div className=\"sticky-top p-2\">\n          <div\n            className={`p-2 row  text-center ${\n              isToggleClicked\n                ? \"bg-dark border-secondary text-light\"\n                : \"bg-light text-dark\"\n            } fs-1 border rounded-3`}\n          >\n            <div\n              className={`col-6 text-start fw-normal ${\n                isToggleClicked ? \"text-warning\" : \"text-success\"\n              }`}\n            >\n              Todoz\n            </div>\n            <div className=\"col-6 text-end\">\n              <button\n                className={` btn ${toggleButtonColor}`}\n                onClick={() => setIsToggleClicked(!isToggleClicked)}\n              >\n                {isToggleClicked ? <span>&#9789;</span> : <span>&#9728;</span>}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className={`text-end mt-2 mb-2 pt-2 pb-2 ${\n            isToggleClicked ? \"text-warning\" : \"text-primary\"\n          }`}\n        >\n          <span className=\"border rounded p-2\">{myName}</span>\n        </div>\n\n        <div className=\"\">\n          <div\n            className={`border rounded p-4 ${\n              isToggleClicked ? \"border-secondary\" : \"\"\n            }`}\n          >\n            <div class=\"mb-3 row\">\n              <label\n                for={`${\n                  isToggleClicked ? \"headlineInputDark\" : \"headlineInputLight\"\n                }`}\n                className={`col-6 fw-bold form-label text-start ${\n                  isToggleClicked ? \"text-info\" : \"text-primary\"\n                }`}\n              >\n                Task headline\n              </label>\n              <span className={`col-6 text-end text-danger`}>\n                {headlineError}\n              </span>\n              <input\n                type=\"text\"\n                id={`${\n                  isToggleClicked ? \"headlineInputDark\" : \"headlineInputLight\"\n                }`}\n                placeholder=\"write your task headline...\"\n                class=\"form-control\"\n                className={`form-control input ${headlineBorder} ${\n                  isToggleClicked\n                    ? \"bg-dark text-light border-secondary \"\n                    : \"bg-light text-dark\"\n                } `}\n                value={todoHeadline}\n                onChange={(e) => setTodoHeadline(e.target.value)}\n              />\n            </div>\n            <div class=\"mb-3 row\">\n              <label\n                for={`${\n                  isToggleClicked\n                    ? \"descriptionInputDark\"\n                    : \"descriptionInputLight\"\n                }`}\n                className={`col-6 fw-bold form-label ${\n                  isToggleClicked ? \"text-info\" : \"text-primary\"\n                }`}\n              >\n                Task Description\n              </label>\n              <span className={`col-6 text-end text-danger`}>\n                {descriptionError}\n              </span>\n              <textarea\n                placeholder=\"write your task decsciption...\"\n                className={`form-control ${descInputBorderColor} ${\n                  isToggleClicked\n                    ? \" bg-dark text-light border-secondary\"\n                    : \"bg-light text-dark\"\n                }`}\n                id={`${\n                  isToggleClicked\n                    ? \"descriptionInputDark\"\n                    : \"descriptionInputLight\"\n                }`}\n                value={todoDescription}\n                onChange={(e) => setTodoDescription(e.target.value)}\n              />\n            </div>\n\n            <div className=\"row text-center\">\n              <span className=\"col-4\">\n                <button\n                  className={`w-75 btn btn-outline-info ${\n                    isToggleClicked ? \"text-light\" : \"text-dark\"\n                  }`}\n                  onClick={() => clearField()}\n                >\n                  Clear\n                </button>\n              </span>\n              <span className=\"col-8\">\n                <button\n                  type=\"button\"\n                  onClick={() => addTask(todoHeadline, todoDescription)}\n                  className={`btn w-100 text-light btn-success`}\n                >\n                  Add Task\n                </button>\n              </span>\n            </div>\n          </div>\n          {/* <hr className={`${isToggleClicked ? \"text-light\" : \"text-dark\"}`} /> */}\n          <div class=\"row mt-2 pt-2 justify-content-start\">\n            <div\n              className={`col-6 fs-3 ${\n                isToggleClicked ? \"text-light\" : \"text-dark\"\n              }`}\n            >\n              Tasks\n            </div>\n            <div className=\"col-6 text-start p-2\" style={{ color: msgColor }}>\n              {actionMessage}\n            </div>\n            <hr className={`${isToggleClicked ? \"text-light\" : \"text-dark\"}`} />\n          </div>\n\n          <div>\n            <div>\n              {todos.length > 0 ? (\n                <table\n                  className={`table ${\n                    isToggleClicked ? \"table-dark\" : \"table-light\"\n                  }`}\n                >\n                  <thead>\n                    <tr>\n                      {/* <th\n                        scope=\"col\"\n                        className={`${\n                          isToggleClicked ? \"text-info\" : \"text-primary\"\n                        }`}\n                      >\n                        #\n                      </th> */}\n                      <th\n                        scope=\"col\"\n                        className={`${\n                          isToggleClicked ? \"text-info\" : \"text-primary\"\n                        }`}\n                      >\n                        Headline\n                      </th>\n                      <th scope=\"col\" className=\"text-start text-warning\">\n                        Edit\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className={`${\n                          isToggleClicked ? \"text-info\" : \"text-primary\"\n                        }`}\n                      >\n                        Description\n                      </th>\n                      <th scope=\"col\" className=\"text-start text-warning\">\n                        Edit\n                      </th>\n                      <th scope=\"col\" className={`text-start text-danger`}>\n                        Delete\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {todos.map((todo) => (\n                      <tr>\n                        {/* <td scope=\"row\">{todo.id}</td> */}\n                        <td>\n                          {isEditHeadlineClicked && editedTodoId == todo.id ? (\n                            <span>\n                              <input\n                                id={`${\n                                  isToggleClicked\n                                    ? \"headlineEditInputDark\"\n                                    : \"headlineEditInputLight\"\n                                }`}\n                                className={`form-control ${\n                                  isToggleClicked\n                                    ? \"bg-dark text-light\"\n                                    : \"bg-light text-dark\"\n                                }`}\n                                placeholder=\"edit headline...\"\n                                value={editedHeadline}\n                                onChange={(e) =>\n                                  setEditedHeadline(e.target.value)\n                                }\n                              />\n                            </span>\n                          ) : (\n                            <>{todo.headline}</>\n                          )}\n                        </td>\n                        <td className=\"text-start\">\n                          {isEditHeadlineClicked && editedTodoId == todo.id ? (\n                            <span>\n                              <button\n                                className=\"btn text-dark btn-outline-success\"\n                                onClick={() =>\n                                  saveHeadline(editedHeadline, editedTodoId)\n                                }\n                              >\n                                &#x2611;\n                              </button>\n                              <button\n                                className=\"btn text-danger btn-outline-success\"\n                                onClick={() => setIsEditHeadlineClicked(false)}\n                              >\n                                &#x2612;\n                              </button>\n                            </span>\n                          ) : (\n                            <></>\n                          )}\n                          {!isEditHeadlineClicked ? (\n                            <span className=\"text-start\">\n                              {/* <Tooltip\n                                anchorSelect=\".edit-headline\"\n                                place=\"top\"\n                              >\n                                Edit Headline\n                              </Tooltip> */}\n                              <a className=\"edit-headline\">\n                                <button\n                                  type=\"button\"\n                                  onClick={() => editTaskHeadline(todo)}\n                                  className={`btn ${\n                                    isToggleClicked\n                                      ? \"text-light btn-outline-success\"\n                                      : \"text-dark btn-outline-info\"\n                                  }`}\n                                >\n                                  &#9998;\n                                </button>\n                              </a>\n                            </span>\n                          ) : (\n                            <></>\n                          )}\n                        </td>\n                        <td>\n                          {isEditDescriptionClicked &&\n                          editedTodoId == todo.id ? (\n                            <span>\n                              <input\n                                id={`${\n                                  isToggleClicked\n                                    ? \"descEditInputDark\"\n                                    : \"descEditInputLight\"\n                                }`}\n                                className={`form-control ${\n                                  isToggleClicked\n                                    ? \"bg-dark text-light\"\n                                    : \"bg-light text-dark\"\n                                }`}\n                                placeholder=\"edit description...\"\n                                value={editedDescription}\n                                onChange={(e) =>\n                                  setEditedDescription(e.target.value)\n                                }\n                              />\n                            </span>\n                          ) : (\n                            <>{todo.description}</>\n                          )}\n                        </td>\n                        <td className=\"text-start\">\n                          {isEditDescriptionClicked &&\n                          editedTodoId == todo.id ? (\n                            <span>\n                              <button\n                                className=\"text-dark btn btn-outline-success\"\n                                onClick={() =>\n                                  saveDescription(editedDescription, todo.id)\n                                }\n                              >\n                                &#x2611;\n                              </button>\n                              <button\n                                className=\"btn text-danger btn-outline-success\"\n                                onClick={() =>\n                                  setIsEditDescriptionClicked(false)\n                                }\n                              >\n                                &#x2612;\n                              </button>\n                            </span>\n                          ) : (\n                            <></>\n                          )}\n                          {!isEditDescriptionClicked ? (\n                            <span className=\"\">\n                              {/* <Tooltip anchorSelect=\".edit-desc\" place=\"top\">\n                                Edit Description\n                              </Tooltip> */}\n                              <a className=\"edit-desc\">\n                                <button\n                                  type=\"button\"\n                                  onClick={() => editTaskDescription(todo)}\n                                  className={`btn ${\n                                    isToggleClicked\n                                      ? \"text-light btn-outline-success \"\n                                      : \"text-dark btn-outline-info\"\n                                  }`}\n                                >\n                                  &#9998;\n                                </button>\n                              </a>\n                            </span>\n                          ) : (\n                            <></>\n                          )}\n                        </td>\n                        <td className=\"text-start p-2\">\n                          {/* <Tooltip anchorSelect=\".delete\" place=\"top\">\n                            Delete Task\n                          </Tooltip> */}\n\n                          <button\n                            type=\"button\"\n                            class=\"btn btn-danger\"\n                            data-toggle=\"modal\"\n                            data-target={`#${todo.id}`}\n                          >\n                            &#10007;\n                          </button>\n\n                          <div\n                            class=\"modal fade\"\n                            id={todo.id}\n                            tabindex=\"-1\"\n                            role=\"dialog\"\n                            aria-labelledby=\"exampleModalCenterTitle\"\n                            aria-hidden=\"true\"\n                          >\n                            <div\n                              class=\"modal-dialog modal-dialog-centered\"\n                              role=\"document\"\n                            >\n                              <div class=\"modal-content\">\n                                <div\n                                  className={`modal-body ${\n                                    isToggleClicked\n                                      ? \"bg-dark text-light\"\n                                      : \"bg-light text-dark\"\n                                  }`}\n                                >\n                                  <h5>Are your sure ?</h5>\n                                </div>\n                                <div\n                                  className={`modal-footer ${\n                                    isToggleClicked ? \"bg-dark\" : \"bg-light\"\n                                  }`}\n                                >\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-dismiss=\"modal\"\n                                  >\n                                    No, Cancel\n                                  </button>\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger\"\n                                    data-dismiss=\"modal\"\n                                    onClick={() => deleteTask(todo.id)}\n                                  >\n                                    Yes, Delete\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          {/* <a className=\"delete\">\n                            <button\n                              type=\"button\"\n                              onClick={() => deleteTask(todo.id)}\n                              className=\"btn btn-danger px-2\"\n                            >\n                              &#9003;\n                            </button>\n                          </a> */}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}